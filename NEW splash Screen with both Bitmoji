var currentScene = 0; //0 = splash, 1 = game
var stillPlaying = false;

var drawbitmoji = function(x,y,h)
{


var drawhead = function(x,y,h)
{
    
//meerbott_bitmoji
//neck
fill(247, 228, 175);
rect( x+71, y+139, 30, h+8);
//head
fill(247, 228, 175);
ellipse(x+86,y+103,71,h+80); 
};
drawhead(x,y,h); 



var draweyes = function(x,y,h)
{
//eyes 
fill(255, 255, 255);
ellipse(x+72,y+96,17,h+11);
ellipse(x+99,y+96,17,h+11);
fill(94, 60, 12);
ellipse(x+72,y+96,8,h+7);
ellipse(x+99,y+96,8,h+7);
fill(0, 0, 0);
strokeWeight(2.9);
point(x+72,y+96);
point(x+99,y+96);
}; 
draweyes(x,y,h); 

var drawhair = function(x,y,h) 
{
//hair
quad(x+64, y+64, x+52, y+72, x+46, y+95, x+57, y+84 );
quad(x+109, y+76, x+111, y+68, x+121, y+76, x+124, y+98 );
//brows
line(x+108, y+87, x+89, y+87); 
line(x+63, y+86, x+81, y+87); 
}; 

drawhair(x,y,h); 


var drawface = function(x,y,h)
{
//nose
fill(247, 228, 175);
bezier(x+85, y+103, x+97, y+111, x+67, y+118, x+88, y+117);
//mouth
fill(252, 249, 249);
arc(x+86,y+127,15,h+5,1,180);
arc(x+85,y+127,15,h+5,-174,-11);
};
drawface(x,y,h);

var drawhat = function(x,y,h)
{
//hat
fill(21, 20, 79);
arc(x+86,y+72,72,h+66, -184, 6); 
textSize(25);
fill(255, 0, 0);
text("B", x+77, y+41); 
fill(245, 196, 243);
arc(x+86,y+78,78,h+20, -184, 6); 
}; 
drawhat(x,y,h);

var drawhoodie = function(x,y,h)
{
//hoodie
fill(81, 78, 105);
arc(x+85, y+195, 112, h+100, -179,0);
fill(28, 20, 77);
rect(x+75, y+148, 25, h+43);
//letters
fill(247, 239, 239);
text("KM",x+67,y+154);
}; 

drawhoodie(x,y,h);

}; 

var posX = 0;
var posY = 0;
var sizeFactor = 100;
//bowl
var drawBowl = function(posX, posY, sizeFactor)
{
    fill(70, 152, 204);//bowl color
    arc(posX+sizeFactor/100*75, posY+sizeFactor/100*20, sizeFactor/100*50, sizeFactor/100*35, 0, 180);//bowl on head
};
//head

var drawHead = function(posX, posY, sizeFactor)
{
    fill(255, 222, 161);//skintone color
    rect(posX+sizeFactor/100*65,posY+sizeFactor/100*83,sizeFactor/100*20,sizeFactor/100*20);//neck
    ellipse(posX+sizeFactor/100*47, posY+sizeFactor/100*58, sizeFactor/100*6, sizeFactor/100*17);//left ear
    ellipse(posX+sizeFactor/100*103, posY+sizeFactor/100*58, sizeFactor/100*6, sizeFactor/100*17);//right ear
    ellipse(posX+sizeFactor/100*75, posY+sizeFactor/100*58, sizeFactor/100*54, sizeFactor/100*66);//head
};
//face

var drawFace = function(posX, posY, sizeFactor)
{
    arc(posX+sizeFactor/100*75, posY+sizeFactor/100*67, sizeFactor/100*14, sizeFactor/100*12, -49, 96);//nose
    arc(posX+sizeFactor/100*75, posY+sizeFactor/100*79, sizeFactor/100*14, sizeFactor/100*5, 0, 180);//mouth
    fill(255, 255, 255);//eye color
    ellipse(posX+sizeFactor/100*63, posY+sizeFactor/100*58, sizeFactor/100*10, sizeFactor/100*3);//left eye
    ellipse(posX+sizeFactor/100*87, posY+sizeFactor/100*58, sizeFactor/100*10, sizeFactor/100*8);//right eye
    fill(0, 0, 0);//pupil color
    ellipse(posX+sizeFactor/100*63, posY+sizeFactor/100*58, sizeFactor/100*4, sizeFactor/100*1);//left eye pupil
    ellipse(posX+sizeFactor/100*87, posY+sizeFactor/100*58, sizeFactor/100*4, sizeFactor/100*4);//right eye pupil
    fill(59, 39, 6);//hair color
    quad(posX+sizeFactor/100*72,posY+sizeFactor/100*75,posX+sizeFactor/100*64,posY+sizeFactor/100*79,posX+sizeFactor/100*86,posY+sizeFactor/100*79,posX+sizeFactor/100*80,posY+sizeFactor/100*75);//mustache
};
//hair

var drawHair = function(posX, posY, sizeFactor)
{
    fill(59, 39, 6);//hair color
    ellipse(posX+sizeFactor/100*75, posY+sizeFactor/100*33, sizeFactor/100*46, sizeFactor/100*15);//hair
    triangle(posX+sizeFactor/100*49, posY+sizeFactor/100*37, posX+sizeFactor/100*77, posY+sizeFactor/100*28, posX+sizeFactor/100*56, posY+sizeFactor/100*52);//hair
    triangle(posX+sizeFactor/100*106, posY+sizeFactor/100*37, posX+sizeFactor/100*93, posY+sizeFactor/100*28, posX+sizeFactor/100*101, posY+sizeFactor/100*52);//hair
    triangle(posX+sizeFactor/100*49, posY+sizeFactor/100*37, posX+sizeFactor/100*77, posY+sizeFactor/100*28, posX+sizeFactor/100*48, posY+sizeFactor/100*52);//hair
};

//shirt
var drawShirt = function(posX, posY, sizeFactor)
{
    fill(16, 0, 163);//shirt color
    quad(posX+sizeFactor/100*100,posY+sizeFactor/100*100,posX+sizeFactor/100*50,posY+sizeFactor/100*100,posX+sizeFactor/100*15,posY+sizeFactor/100*150,posX+sizeFactor/100*135,posY+sizeFactor/100*150);//body
    fill(255, 0, 0);//initials color
    textSize(sizeFactor/2.5);//initials size
    text("GK", posX+sizeFactor/100*45, posY+sizeFactor/100*100);//initials
};
//Bitmoji Head
var drawBitmojiHead = function(posX, posY, sizeFactor)
{
    drawBowl(posX, posY, sizeFactor);
    drawHead(posX, posY, sizeFactor);
    drawFace(posX, posY, sizeFactor);
    drawHair(posX, posY, sizeFactor);
};
//Bitmoji Body
var drawBitmojiBody = function(posX, posY, sizeFactor)
{
    drawShirt(posX, posY, sizeFactor);
};
//Bitmoji
var drawBitmoji = function(posX, posY, sizeFactor)
{
    drawBitmojiHead(posX, posY, sizeFactor);
    drawBitmojiBody(posX, posY, sizeFactor);
};



//button
var Button = function(config) {
    this.x = config.x || 0;
    this.y = config.y || 0;
    this.width = config.width || 150;
    this.height = config.height || 50;
    this.label = config.label || "Click";
};

Button.prototype.draw = function() {
    fill(0, 234, 255);
    rect(this.x, this.y, this.width, this.height, 5);
    fill(0, 0, 0);
    textSize(19);
    textAlign(LEFT, TOP);
    text(this.label, this.x+10, this.y+this.height/4);
};

Button.prototype.isMouseInside = function() {
    return mouseX > this.x &&
           mouseX < (this.x + this.width) &&
           mouseY > this.y &&
           mouseY < (this.y + this.height);
};


var btn1 = new Button({
    x: 130,
    y: 300,
    label: "Press to Start"
});

var drawTimer = function(){
    fill(0, 0, 0);
    textSize(15);
    text("TIME: " + floor(frameCount/62), 118, 5);
};

mouseClicked = function() {
    if (btn1.isMouseInside()) {
        currentScene=1;
    }
};

var drawScene1 = function(){
    background(255, 125, 125);
    text("Gavin Kiernan", 43, 156);
    text("Kai Meerbott", 250, 158);
    text("This is our Air Hockey game created using the \r\nProcessingJS coding library in Khan Academy!", 4, 219);
    drawbitmoji(217,-45,1);
    drawBitmoji(12,-22,114); 
    btn1.draw();
};

var drawScene2 = function(){
//Time start
var stillPlaying = true;
//memory game
var Tile = function(x, y, face) {
    this.x = x;
    this.y = y;
    this.size = 50;
    this.face = face;
    this.isFaceUp = false;
    this.isMatch = false;
};

Tile.prototype.draw = function() {
    fill(214, 247, 202);
    strokeWeight(2);
    rect(this.x, this.y, this.size, this.size, 10);
    if (this.isFaceUp) {
        image(this.face, this.x, this.y, this.size, this.size);
    } else {
        image(getImage("avatars/leaf-green"), this.x, this.y, this.size, this.size);
    }
};

Tile.prototype.isUnderMouse = function(x, y) {
    return x >= this.x && x <= this.x + this.size  &&
        y >= this.y && y <= this.y + this.size;
};

// Global config
var NUM_COLS = 6;
var NUM_ROWS = 4;

// Declare an array of all possible faces
var faces = [
    getImage("avatars/aqualine-seed"),
    getImage("avatars/aqualine-tree"),
    getImage("avatars/mr-pink-green"),
    getImage("avatars/spunky-sam-red"),
    getImage("creatures/BabyWinston"),
    getImage("cute/TreeUgly"),
    getImage("cute/Key"),
    getImage("cute/GrassBlock")
];

// Make an array which has 2 of each, then randomize it
var possibleFaces = faces.slice(0);
var selected = [];
for (var i = 0; i < (NUM_COLS * NUM_ROWS) / 3; i++) {
    // Randomly pick one from the array of remaining faces
    var randomInd = floor(random(possibleFaces.length));
    var face = possibleFaces[randomInd];
    // Push thrice onto array
    selected.push(face);
    selected.push(face);
    selected.push(face);
    // Remove from array
    possibleFaces.splice(randomInd, 1);
}

// Now shuffle the elements of that array
var shuffleArray = function(array) {
    var counter = array.length;

    // While there are elements in the array
    while (counter > 0) {
        // Pick a random index
        var ind = Math.floor(Math.random() * counter);
        // Decrease counter by 1
        counter--;
        // And swap the last element with it
        var temp = array[counter];
        array[counter] = array[ind];
        array[ind] = temp;
    }
};
shuffleArray(selected);

// Create the tiles
var tiles = [];
for (var i = 0; i < NUM_COLS; i++) {
    for (var j = 0; j < NUM_ROWS; j++) {
        var tileX = i * 54 + 10;
        var tileY = j * 54 + 40;
        var tileFace = selected.pop();
        tiles.push(new Tile(tileX, tileY, tileFace));
    }
}

background(255, 255, 255);

var numTries = 0;
var numMatches = 0;
var flippedTiles = [];
var delayStartFC = null;

mouseClicked = function() {
    for (var i = 0; i < tiles.length; i++) {
        var tile = tiles[i];
        if (tile.isUnderMouse(mouseX, mouseY)) {
            if (flippedTiles.length < 3 && !tile.isFaceUp) {
                tile.isFaceUp = true;
                flippedTiles.push(tile);
                if (flippedTiles.length === 3) {
                    numTries++;
                    if (flippedTiles[0].face === flippedTiles[1].face && flippedTiles[1].face === flippedTiles[2].face && flippedTiles[2].face === flippedTiles[0].face) {
                        flippedTiles[0].isMatch = true;
                        flippedTiles[1].isMatch = true;
                        flippedTiles[2].isMatch = true;
                        flippedTiles.length = 0;
                        numMatches++;
                    }
                    delayStartFC = frameCount;
                }
            } 
            loop();
        }
    }
};

draw = function() {
        if(stillPlaying === false){
        return;
       
    }
    background(255, 255, 255);
    if (delayStartFC && (frameCount - delayStartFC) > 30) {
        for (var i = 0; i < tiles.length; i++) {
            var tile = tiles[i];
            if (!tile.isMatch) {
                tile.isFaceUp = false;
            }
        }
        flippedTiles = [];
        delayStartFC = null;
        noLoop();
    }
    
    for (var i = 0; i < tiles.length; i++) {
        tiles[i].draw();
    }
    
    if (numMatches === tiles.length/3) {
        fill(0, 0, 0);
        textSize(20);
        text("You found them all in " + numTries + " tries!", 20, 375);
    }
     fill(0, 0, 0);
     text("Attempts: " + numTries,225,4);
     textSize(18);
     drawTimer();
};

noLoop();
};

draw = function() {
     if(currentScene===0){
         drawScene1();
     }
     if(currentScene===1){
         drawScene2();
     }
};
